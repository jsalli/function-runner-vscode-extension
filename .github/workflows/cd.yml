on:
  push:
    branches:
      - main
    tags:
      - 'v*' 

env:
  TESTING_IN_CLOUD_PIPELINE: true

jobs:
  test:
    name: Run VSCode extension tests
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest] # TODO: windows-latest does not work yet
        node-version: [v20.17.0]
        # node-version: [v18.20.4, v20.17.0, v22.9.0]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.11.0

      - name: Install Rush and Yarn globally
        run: npm install -g @microsoft/rush yarn

      - name: Run Rush update
        run: rush update
        
      - name: Run VSCode end-2-end tests
        if: runner.os == 'Linux'
        working-directory: ./packages/vscode-extension
        # Add below lines to fix error:
        # Failed to connect to the bus: Could not parse server address: Unknown address type (examples of valid types are “tcp” and on UNIX “unix”)
        # https://kevinhakanson.com/2024-02-12-testing-a-visual-studio-code-extension-inside-github-actions/
        run: |
          export XDG_RUNTIME_DIR=/run/user/$(id -u)
          export DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/bus
          dbus-daemon --session --address=$DBUS_SESSION_BUS_ADDRESS --nofork --nopidfile --syslog-only &
          mkdir ~/.vscode && echo '{ "disable-hardware-acceleration": true }' > ~/.vscode/argv.json
          xvfb-run -a pnpm test-e2e-multiple-setups

      - name: Run VSCode end-2-end tests
        if: runner.os != 'Linux'
        working-directory: ./packages/vscode-extension
        run: pnpm test-e2e-multiple-setups

  publish:
    name: Publish new version to VSCode Marketplace and Make a Github release
    runs-on: ubuntu-latest
    needs:
      - test
    if: needs.test.result == 'success' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: v20.17.0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.11.0

      - name: Install Rush globally
        run: npm install -g @microsoft/rush
  
      - name: Run Rush update
        run: rush update

      - name: Set environment variables PACKAGE_VERSION and PACKAGE_NAME
        working-directory: ./packages/vscode-extension
        run: node -e "console.log('PACKAGE_VERSION=' + require('./package.json').version + '\nPACKAGE_NAME=' + require('./package.json').name + '-' + require('./package.json').version)" >> $GITHUB_ENV

      - name: Verify GIT tag version against extension's version field in package.json
        run: node -e "if ('refs/tags/v' + '${{ env.PACKAGE_VERSION }}' !== '${{ github.ref }}') { console.log('::error' + 'Version Mismatch. refs/tags/v' + '${{ env.PACKAGE_VERSION }}', '${{ github.ref }}'); throw Error('Version Mismatch')} "

      - name: Package Extension
        working-directory: ./packages/vscode-extension
        run: pnpm package-extension-prod

      - name: Publish to VSCode Marketplace
        working-directory: ./packages/vscode-extension
        run: pnpm vsce publish --no-dependencies --packagePath ./publish/${{ env.PACKAGE_NAME }}.vsix -p ${{ secrets.VSCE_PAT }}

      - name: Generate Changelog
        id: generate_changelog
        uses: mindsers/changelog-reader-action@v2
        with:
            version: ${{ env.PACKAGE_VERSION }}
            path: ./packages/vscode-extension/CHANGELOG.md

      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ github.ref }}
            name: v${{ env.PACKAGE_VERSION }}
            body: ${{ steps.generate_changelog.outputs.changes }}
            draft: false
            prerelease: false
            files: ./packages/vscode-extension/publish/${{ env.PACKAGE_NAME }}.vsix
